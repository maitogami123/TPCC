# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Cinema {
  id: Int!
  code_name: String!
  name: String!
  address: String!
  created_at: DateTime!
  updated_at: DateTime!
  deleted_at: DateTime
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Seat {
  id: Int!
  type: String!
  created_at: DateTime!
  updated_at: DateTime!
  deleted_at: DateTime
}

type Theater {
  id: Int!
  name: String!
  rows: Float!
  columns: Float!
  created_at: DateTime!
  updated_at: DateTime!
  deleted_at: DateTime
  seats: [Seat!]!
  cinema: Cinema!
}

type Snack {
  id: Int!
  name: String!
  description: String!
  price: Float!
  discount: Float!
  created_at: DateTime!
  updated_at: DateTime!
  deleted_at: DateTime!
}

type Role {
  id: Int!
  name: String!
  description: String!
  created_at: DateTime!
  updated_at: DateTime!
  deleted_at: DateTime
}

type User {
  id: Int!
  username: String!
  hashed_password: String!
  email: String!
  phone_number: String!
  hashed_rt: String!
  created_at: DateTime!
  updated_at: DateTime!
  deleted_at: DateTime
  role: Role
}

type LoginResponse {
  access_token: String!
  refresh_token: String!
}

type Query {
  getUserByUsername(username: String!): User!
  getRole(roleId: Float!): Role!
  getTheaterById(id: Float!): Theater!
  getUserProfile: User!
  getCinemaById(id: Float!): Cinema!
  getCinemaByCodeName(codeName: String!): Cinema!
}

type Mutation {
  createUser(NewUserInput: NewUserInputDto!): User!
  updateUser(UpdateUserInput: UpdateUserInputDto!): User!
  createRole(RoleInput: RoleInput!): Role!
  updateRole(roleId: Float!, updateRoleInput: RoleInput!): Role!
  deleteRole(roleId: Float!): Boolean!
  createTheater(newTheaterData: NewTheaterDto!): Theater!
  createSnack(newSnackData: NewSnackDto!): Snack!
  signInLocal(SignInAuthDto: SignInAuthDto!): LoginResponse!
  refreshSession: LoginResponse!
  logout: Boolean!
  createCinema(cinemaInput: NewCinemaDto!): Cinema!
}

input NewUserInputDto {
  username: String!
  password: String!
  confirmPassword: String!
  email: String!
  phoneNumber: String!
}

input UpdateUserInputDto {
  password: String
  confirmPassword: String
  email: String
  phoneNumber: String
  roleName: String
}

input RoleInput {
  name: String!
  description: String!
}

input NewTheaterDto {
  name: String!
  rows: Float!
  columns: Float!
  cinemaCodeName: String!
}

input NewSnackDto {
  name: String!
  description: String!
  price: Float!
  discount: Float
}

input SignInAuthDto {
  username: String!
  password: String!
}

input NewCinemaDto {
  codeName: String!
  name: String!
  address: String!
}